name: Concat value
 
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to use'
        required: true
      code-repository:
        description: 'Provide Repo name'
        required: true
 
jobs:
  update_json:
    runs-on: self-hosted
    environment: ${{ github.event.inputs.environment }}
    outputs:
      branch_name: ${{ steps.extract-branch.outputs.branch_name }}
      code_name: ${{ steps.extract-branch.outputs.code_name }}
 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
 
      - name: Extract branch name from JSON
        id: extract-branch
        shell: powershell
        run: |
          $env:Path += ";C:\ProgramData\chocolatey\bin"
          branch_name=$(jq -r '.[] | select(.Phase == 2) | .Branch' component.json)
          code_name=$(jq -r '.[] | select(.Phase == 2) | .code' component.json)
   
          if [[ -z "$branch_name" || -z $code_name ]]; then
            echo "No object with Phase=2 found in component.json"
            exit 1
          else
            echo "::set-output name=branch_name::$branch_name"
            echo "::set-output name=code_name::$code_name"
          fi
      - name: Print the values
        run: |
          #echo "Display_branch_name: $branch_name"
          echo "Output_branchname: ${{ steps.extract-branch.outputs.branch_name }}"
          echo "Output_codename: ${{ steps.extract-branch.outputs.code_name }}"
     

      - name: Concat value
        id: concat-value
        shell: powershell
        env:
         CLIENTNAME: ${{ vars.CLIENTNAME }}
        run: |
         $JSONBRANCH = "${{ steps.extract-branch.outputs.branch_name }}"
         $JSONCODE = "${{ steps.extract-branch.outputs.code_name }}"
         $concatvalue = "sb/$($JSONBRANCH)/$($JSONCODE)_encrypted.json"
         $concatvaluenew = "$($JSONCODE)_encrypted.json"
         $sharefile = "$env:CLIENTNAME"
         $filesharename = "${sharefile}Share"
         $filepath = "nsi/Jsonfile.json"
         Write-Output "::set-output name=concatvaluenew::$concatvaluenew"
         Write-Output "::set-output name=filepath::$filepath"
         Write-Output "::set-output name=concatvalue::$concatvalue"
         Write-Output "::set-output name=filesharename::$filesharename"
 
      - name: Copy file
        shell: bash
        run: |
         echo "Copying file from ${{ steps.concat-value.outputs.concatvaluenew }} to ${{ steps.concat-value.outputs.filepath }}"
         cp ${{ steps.concat-value.outputs.concatvaluenew }} ${{ steps.concat-value.outputs.filepath }}
