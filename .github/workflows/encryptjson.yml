name: encryptJSON file
on: workflow_dispatch
jobs:
  encrypt_json:
    runs-on: self-hosted
    environment:
      dev
    steps:
      - name: Download JSON file
        run: |
          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/DivyaPrabhavathi/Maven/main/NSI.json" -OutFile "NSI.json"
        shell: powershell

      - name: Assign values to JSON file
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          ENV_NAME: ${{ secrets.ENV_NAME }}
        run: |
          # Read JSON file and convert to object
          $json = Get-Content NSI.json | ConvertFrom-Json

          # Modify JSON object properties using environment variables
          $json.Sphere.USERNAME = $env:DOCKER_USERNAME
          $json.Sphere.PASSWORD = $env:DOCKER_PASSWORD
          $json.Sphere.NAME = $env:ENV_NAME

          # Convert modified object back to JSON string
          $plainTextJson = $json -AsJson

      - name: Encrypt JSON file and generate key
        run: |
          # Generate a new AES key (32 bytes)
          $bytes = New-Object byte[](32)
          (New-Object System.Security.Cryptography.RNGCryptoServiceProvider).GetBytes($bytes)
          $key = [System.Convert]::ToBase64String($bytes)

          # Ensure plainTextJson is a string
          if (-not [string]::IsInstanceOfType($plainTextJson)) {
            $plainTextJson = $plainTextJson.ToString()  # Convert to string if needed
          }

          # Encrypt the JSON string
          $secureJson = ConvertTo-SecureString -String $plainTextJson -Key $bytes
          $encryptedJson = ConvertFrom-SecureString -SecureString $secureJson -Key $bytes

          # Save the encrypted JSON to a new file
          $encryptedJson | Set-Content -Path "NSI.encrypted.json"

          # Save the key to a file (consider encryption for the key)
          $key | Set-Content -Path "key.txt"
        shell: powershell
